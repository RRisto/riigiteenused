library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
korrastajaDT=function(andmed, eemalda, mootmiseAasta) {
library(data.table)
andmed=data.table(andmed)
#eemalda - mis osa columnite nimedest tuleb eemdalda
setnames(andmed, names(andmed), gsub(eemalda, "", names(andmed)))
#kanalite lõikes meldime
veeb=meltimineDT("Veebileht / portaal.", data=andmed)
iseteen=meltimineDT("E-iseteenindus.", data=andmed)
eesti=meltimineDT("Eesti.ee.", data=andmed)
nuti=meltimineDT("Nutirakendus.", data=andmed)
digitv=meltimineDT("Digitelevisioon.", data=andmed)
epost=meltimineDT("E-post.", data=andmed)
sms=meltimineDT("Tekstisõnum.", data=andmed)
telefon=meltimineDT("Telefon.", data=andmed)
faks=meltimineDT("Faks.", data=andmed)
post=meltimineDT("Post.", data=andmed)
lett=meltimineDT("Letiteenus.", data=andmed)
kodus=meltimineDT("Kliendi juures.", data=andmed)
#rbindime
koos=rbindlist(list(veeb, iseteen, eesti, nuti, digitv, epost, sms, telefon, faks,
post, lett, kodus))
#eemaldame kanali ja näitaja ning paneme eraldi veergu
if (length(koos)==0) {
return(NULL)
} else {
koos[,variable:=gsub(".ee.", ".", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Letiteenus büroos", "Letiteenus", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("E-iseteenindus", "Eiseteenindus", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("E-post", "Epost", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Veebileht / portaal", "Veebileht", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Kliendi juures", "Kliendijuures", as.character(koos[,variable]), fixed=T)]
koos[, c("kanal", "naitaja") := tstrsplit(as.character(koos[["variable"]]), "\\.(?=[^\\.]+$)", perl=T)]
koos[,kanal:=gsub("^.*\\.", "", koos[, kanal])]
#viskame välja tühjad read, kus pole linki
koos=koos[link!="NA"]
koos[,MootmiseAasta:=mootmiseAasta]
koos
}
}
andmedPikaksDT=function(andmedLai) {
library(data.table)
andmed=data.table(andmedLai)
andmedLai2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F]
andmedLai2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F]
andmedLai2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F]
andmedLai2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F]
andmedLai2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F]
andmedLaiEmpty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F]
puhas2015=korrastajaDT(andmedLai2015, "2015.", "2015")
puhas2014=korrastajaDT(andmedLai2014, "2014.", "2014")
puhas2013=korrastajaDT(andmedLai2013, "2013.", "2013")
puhas2012=korrastajaDT(andmedLai2012, "2012.", "2012")
puhas2011=korrastajaDT(andmedLai2011, "2011.", "2011")
puhasEmpty=korrastajaDT(andmedLaiEmpty, "empty.", "pole moodetud")
andmedPikk=rbind(puhas2015, puhas2014, puhas2013, puhas2012,puhas2011,
puhasEmpty)
andmedPikk[, value:=as.numeric(as.character(value))]
}
meltimineDT=function(kanal, data) {
library(data.table)
sub=data[,grepl(paste(kanal, "|identifikaator|ministeerium|allasutus|tegevusvaldkond|teenusetyyp|makse", sep=""),
names(data)), with=F]
id=grep(c("identifikaator|ministeerium|allasutus|tegevusvaldkond|teenusetyyp|makse|link"), names(sub), value=T)
if(length(id)<7) {
tulem=NULL
} else {
#meldime andmed kitsaks
tulem=melt(sub, id=id)
#muudan variable nime ära, mis on kanalispets, muidu ei saa rbindida
lingiNimi=names(tulem)[7]
setnames(tulem, old=lingiNimi, new=c("link"))
}
tulem
}
andmedSisse=function(url) {
#loeme andmed sisse
library(rjson)
library(jsonlite)
fromJSON(url, flatten=T)
}
andmedLai=andmedSisse("https://www.riigiteenused.ee/api/et/all")
andmedPIkk=andmedPikaksDT(andmedLai)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
andmedPikaksDT=function(andmedLai) {
library(data.table)
andmedLai2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F]
andmedLai2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F]
andmedLai2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F]
andmedLai2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F]
andmedLai2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F]
andmedLaiEmpty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F]
puhas2015=korrastajaDT(andmedLai2015, "2015.", "2015")
puhas2014=korrastajaDT(andmedLai2014, "2014.", "2014")
puhas2013=korrastajaDT(andmedLai2013, "2013.", "2013")
puhas2012=korrastajaDT(andmedLai2012, "2012.", "2012")
puhas2011=korrastajaDT(andmedLai2011, "2011.", "2011")
puhasEmpty=korrastajaDT(andmedLaiEmpty, "empty.", "pole moodetud")
andmedPikk=rbind(puhas2015, puhas2014, puhas2013, puhas2012,puhas2011,
puhasEmpty)
andmedPikk[, value:=as.numeric(as.character(value))]
}
andmedSisse=function(url) {
#loeme andmed sisse
library(rjson)
library(jsonlite)
fromJSON(url, flatten=T)
}
korrastajaDT=function(andmed, eemalda, mootmiseAasta) {
library(data.table)
#eemalda - mis osa columnite nimedest tuleb eemdalda
setnames(andmed, names(andmed), gsub(eemalda, "", names(andmed)))
#kanalite lõikes meldime
veeb=meltimineDT("Veebileht / portaal.", data=andmed)
iseteen=meltimineDT("E-iseteenindus.", data=andmed)
eesti=meltimineDT("Eesti.ee.", data=andmed)
nuti=meltimineDT("Nutirakendus.", data=andmed)
digitv=meltimineDT("Digitelevisioon.", data=andmed)
epost=meltimineDT("E-post.", data=andmed)
sms=meltimineDT("Tekstisõnum.", data=andmed)
telefon=meltimineDT("Telefon.", data=andmed)
faks=meltimineDT("Faks.", data=andmed)
post=meltimineDT("Post.", data=andmed)
lett=meltimineDT("Letiteenus.", data=andmed)
kodus=meltimineDT("Kliendi juures.", data=andmed)
#rbindime
koos=rbindlist(list(veeb, iseteen, eesti, nuti, digitv, epost, sms, telefon, faks,
post, lett, kodus))
#eemaldame kanali ja näitaja ning paneme eraldi veergu
if (length(koos)==0) {
return(NULL)
} else {
koos[,variable:=gsub(".ee.", ".", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Letiteenus büroos", "Letiteenus", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("E-iseteenindus", "Eiseteenindus", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("E-post", "Epost", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Veebileht / portaal", "Veebileht", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Kliendi juures", "Kliendijuures", as.character(koos[,variable]), fixed=T)]
koos[, c("kanal", "naitaja") := tstrsplit(as.character(koos[["variable"]]), "\\.(?=[^\\.]+$)", perl=T)]
koos[,kanal:=gsub("^.*\\.", "", koos[, kanal])]
#viskame välja tühjad read, kus pole linki
koos=koos[link!="NA"]
koos[,MootmiseAasta:=mootmiseAasta]
koos
}
}
meltimineDT=function(kanal, data) {
library(data.table)
sub=data[,grepl(paste(kanal, "|identifikaator|ministeerium|allasutus|tegevusvaldkond|teenusetyyp|makse", sep=""),
names(data)), with=F]
id=grep(c("identifikaator|ministeerium|allasutus|tegevusvaldkond|teenusetyyp|makse|link"), names(sub), value=T)
if(length(id)<7) {
tulem=NULL
} else {
#meldime andmed kitsaks
tulem=melt(sub, id=id)
#muudan variable nime ära, mis on kanalispets, muidu ei saa rbindida
lingiNimi=names(tulem)[7]
setnames(tulem, old=lingiNimi, new=c("link"))
}
tulem
}
ˇurl="https://www.riigiteenused.ee/api/et/all"
url="https://www.riigiteenused.ee/api/et/all"
andmedLai=andmedSisse(url)
proov=andmedPikaksDT(andmedLai)
library(data.table)
andmed=data.table(andmedLai)
andmedPikaksDT=function(andmedLai) {
library(data.table)
andmed=data.table(andmedLai)
andmedLai2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F]
andmedLai2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F]
andmedLai2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F]
andmedLai2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F]
andmedLai2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F]
andmedLaiEmpty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F]
puhas2015=korrastajaDT(andmedLai2015, "2015.", "2015")
puhas2014=korrastajaDT(andmedLai2014, "2014.", "2014")
puhas2013=korrastajaDT(andmedLai2013, "2013.", "2013")
puhas2012=korrastajaDT(andmedLai2012, "2012.", "2012")
puhas2011=korrastajaDT(andmedLai2011, "2011.", "2011")
puhasEmpty=korrastajaDT(andmedLaiEmpty, "empty.", "pole moodetud")
andmedPikk=rbind(puhas2015, puhas2014, puhas2013, puhas2012,puhas2011,
puhasEmpty)
andmedPikk[, value:=as.numeric(as.character(value))]
}
proov=andmedPikaksDT(andmedLai)
library(riigiteenused)
load("~/R/riigiteenused - Copy/.RData")
library(data.table)
andmedLaiList=list(
andmedLai.2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F],
andmedLai.2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.Empty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F])
years=gsub("[^0-9]","",names(andmedLaiList))#get years
years=ifelse(nchar(years)==0, "empty", years)#replace empty with "empty"
years=as.list(years)#make it list
andmedLaiListp=Map(cbind, andmedLaiList, year = years)
proov=andmedLaiListp[[1]]
View(proov)
proov=andmedLaiListp[[2]]
View(proov)
proov=andmedLaiListp[[3]]
View(proov)
proov=andmedLaiListp[[1]]
View(proov)
andmedLaiListp2 <- lapply(andmedLaiListp,
function(df) {
df=korrastajaDT(df, paste0(df$year,"."), df$year)
df
})
warnings()
tulem=rbindlist(andmedLaiListp2, fill=TRUE)
View(tulem)
library(riigiteenused)
proov2=andmedSisse("https://www.riigiteenused.ee/api/et/all")
lai=andmedPikaksDT(proov2)
andmed=proov2
andmedLaiList=list(
andmedLai.2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F],
andmedLai.2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.Empty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F])
library(data.table)
andmedLaiList=list(
andmedLai.2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F],
andmedLai.2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.Empty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F])
class(andmed)
andmed=as.data.table(andmed)
andmedLaiList=list(
andmedLai.2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F],
andmedLai.2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.Empty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F])
years=gsub("[^0-9]","",names(andmedLaiList))#get years
years=ifelse(nchar(years)==0, "empty", years)#replace empty with "empty"
years=as.list(years)#make it list
andmedLaiListp=Map(cbind, andmedLaiList, year = years)
andmedLaiListp2 <- lapply(andmedLaiListp,
function(df) {
df=korrastajaDT(df, paste0(df$year,"."), df$year)
df
})
# andmedPikk=rbind(puhas2015, puhas2014, puhas2013, puhas2012,puhas2011,
#                  puhasEmpty)
tulem=rbindlist(andmedLaiListp2, fill=TRUE)
tulem[, value:=as.numeric(as.character(value))]
identical(tulem, lai)
sum(tulem$value)
sum(tulem$value, na.rm=T)
sum(lai$value, na.rm=T)
table(lai$ministeerium)
table(tulem$ministeerium)
identical(tulem$ministeerium, lai$ministeerium)
identical(tulem$tegevusvaldkond, lai$tegevusvaldkond)
identical(tulem$teenusetyyp, lai$teenusetyyp)
identical(tulem$allasutus, lai$allasutus)
identical(tulem$link, lai$link)
identical(tulem$MootmiseAasta, lai$MootmiseAasta)
class(tulem$MootmiseAasta)
class(lai$MootmiseAasta)
table(lai$MootmiseAasta)
table(tulem$MootmiseAasta)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
library(devtools)
install_github("RRisto/Riigiteenused-dev")
proov=andmedSisse("https://www.riigiteenused.ee/api/et/all")
andmedPikkDT=andmedPikaksDT(proov)
View(andmedPikkDT)
?riigiteenused
??riigiteenused
library(riigiteenused)
library(riigiteenused)
library(riigiteenused)
load("~/GitHub/Riigiteenused-dev/.RData")
View(andmedPikkDT)
unique(andmedPikkDT$MootmiseAasta)
library(devtools)
install_github("RRisto/riigiteenused-dev")
andmed=andmedSisse()
library(riigiteenused)
andmed=andmedSisse()
library(riigiteenused)
andmedSisse
korrastaja=function(andmed, eemalda, mootmiseAasta) {
#eemalda üleliigne col nimedest
#setnames(andmed, names(andmed), gsub(eemalda, "", names(andmed)))
kanalid=c("Veebileht / portaal.","E-iseteenindus.","Eesti.ee.",
"Nutirakendus.","Digitelevisioon.","E-post.","Tekstisõnum.",
"Telefon.","Faks.","Post.","Letiteenus.","Kliendi juures.")
#kanalite lõikes meldime
koos=mapply(meltimine, kanal=kanalid,MoreArgs=list(data=andmed),
SIMPLIFY = F)
#keevitame üheks dfks
koos=rbindlist(koos, fill=TRUE)
#eemaldame kanali ja näitaja ning paneme eraldi veergu
if(length(koos)==0) {
return(NULL)
} else {
koos[,variable:=gsub(".ee.", ".", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Letiteenus büroos", "Teeninduslett",
as.character(koos[,variable]), fixed=T)]
# koos[,variable:=gsub("E-iseteenindus", "Eiseteenindus",
#                      as.character(koos[,variable]), fixed=T)]
# koos[,variable:=gsub("E-post", "Epost",
# as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Veebileht / portaal", "Veebileht",
as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Kliendi juures", "Kliendijuures",
as.character(koos[,variable]), fixed=T)]
koos[, c("kanal", "naitaja") := tstrsplit(
as.character(koos[["variable"]]), "\\.(?=[^\\.]+$)", perl=T)]
koos[,kanal:=gsub("^.*\\.", "", koos[, kanal])]
#viskame välja tühjad read, kus pole linki
koos=koos[link!="NA"]
koos[,MootmiseAasta:=mootmiseAasta]
koos
}
}
andmed=andmedSisse()
meltimine=function(kanal, data) {
sub=data[,grepl(paste(kanal, "|identifikaator|ministeerium|allasutus|tegevusvaldkond|teenusetyyp|makse", sep=""),
names(data)), with=F]
id=grep(c("identifikaator|ministeerium|allasutus|tegevusvaldkond|teenusetyyp|makse|link"), names(sub), value=T)
if(length(id)<7) {
tulem=NULL
} else {
#meldime andmed kitsaks
tulem=reshape2::melt(sub, id=id)
#muudan variable nime ära, mis on kanalispets, muidu ei saa rbindida
lingiNimi=names(tulem)[7]
setnames(tulem, old=lingiNimi, new=c("link"))
}
tulem
}
korrastaja=function(andmed, eemalda, mootmiseAasta) {
#eemalda üleliigne col nimedest
#setnames(andmed, names(andmed), gsub(eemalda, "", names(andmed)))
kanalid=c("Veebileht / portaal.","E-iseteenindus.","Eesti.ee.",
"Nutirakendus.","Digitelevisioon.","E-post.","Tekstisõnum.",
"Telefon.","Faks.","Post.","Letiteenus.","Kliendi juures.")
#kanalite lõikes meldime
koos=mapply(meltimine, kanal=kanalid,MoreArgs=list(data=andmed),
SIMPLIFY = F)
#keevitame üheks dfks
koos=rbindlist(koos, fill=TRUE)
#eemaldame kanali ja näitaja ning paneme eraldi veergu
if(length(koos)==0) {
return(NULL)
} else {
koos[,variable:=gsub(".ee.", ".", as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Letiteenus büroos", "Teeninduslett",
as.character(koos[,variable]), fixed=T)]
# koos[,variable:=gsub("E-iseteenindus", "Eiseteenindus",
#                      as.character(koos[,variable]), fixed=T)]
# koos[,variable:=gsub("E-post", "Epost",
# as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Veebileht / portaal", "Veebileht",
as.character(koos[,variable]), fixed=T)]
koos[,variable:=gsub("Kliendi juures", "Kliendijuures",
as.character(koos[,variable]), fixed=T)]
koos[, c("kanal", "naitaja") := tstrsplit(
as.character(koos[["variable"]]), "\\.(?=[^\\.]+$)", perl=T)]
koos[,kanal:=gsub("^.*\\.", "", koos[, kanal])]
#viskame välja tühjad read, kus pole linki
koos=koos[link!="NA"]
koos[,MootmiseAasta:=mootmiseAasta]
koos
}
}
andmedPikaks=function(andmedLai) {
andmed=data.table(andmedLai)
#tee mõõtmise aasta järgi listiks
andmedLaiList=list(
andmedLai.2015=andmed[, !grepl("empty.|2011.|2013.|2012.|2014.",
names(andmed)), with=F],
andmedLai.2014=andmed[, !grepl("empty.|2011.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.2013=andmed[, !grepl("empty.|2011.|2012.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2012=andmed[, !grepl("empty.|2011.|2013.|2014.|2015.",
names(andmed)), with=F],
andmedLai.2011=andmed[, !grepl("empty.|2014.|2013.|2012.|2015.",
names(andmed)), with=F],
andmedLai.Empty=andmed[, !grepl("2014.|2011.|2013.|2012.|2015.",
names(andmed)), with=F])
years=gsub("[^0-9]","",names(andmedLaiList))#leiab aastad
years=ifelse(nchar(years)==0, "empty", years)#tühi element asenda "empty"ga
years=as.list(years)#tee listiks
andmedLaiList=Map(cbind, andmedLaiList, year = years)#lisa mõõtmise aasta
#lapply läbi korrastaja
andmedLaiList <- lapply(andmedLaiList,
function(df) {
korrastaja(andmed=df, mootmiseAasta=df$year[1],
eemalda=paste0(df$year,".")[1])
})
#tee üheks data frame/table-ks
andmedPikk=rbindlist(andmedLaiList, fill=TRUE)
andmedPikk[, value:=as.numeric(as.character(value))]#tee characteriks
andmedPikk[, MootmiseAasta:=gsub("empty", "pole moodetud", MootmiseAasta)]
}
andmedSisse=function(url="https://www.riigiteenused.ee/api/et/all") {
library(rjson)
library(jsonlite)
#loeme andmed sisse
fromJSON(url, flatten=T)
}
andmed=andmedSisse()
andmedPikk=andmedPikaks(andmed)
library(data.table)
andmedPikk=andmedPikaks(andmed)
unique(andmedPikk$kanal)
korrastaja
library(devtools)
install_github("RRisto/riigitenused-dev")
install_github("RRisto/riigiteenused-dev")
library(riigiteenused)
andmed=andmedSisse()
andmedPikk=andmedPikaks(andmed)
View(andmedPikk)
unique(andmedPikk$kanal)
library(devtools)
install_github("RRisto/riigitenused-dev")
install_github("RRisto/riigiteenused-dev")
library(riigiteenused)
andmed=andmedSisse()
andmedPikk=andmedPikaks(andmed)
unique(andmedPikk$kanal)
iconv("Tekstisõnum.", from = "latin1", to = "UTF-8")
install_github("RRisto/riigiteenused-dev")
library(riigiteenused)
andmed=andmedSisse()
andmedPikk=andmedPikaks(andmed)
install_github("RRisto/riigiteenused-dev")
library(riigiteenused)
andmedPikk=andmedPikaks(andmed)
unique(andmedPikk$kanal)
korrastaja
library(devtools)
install_github
install_github("RRisto/riigiteenused-dev")
install_github("RRisto/riigiteenused-dev", force = T)
library(riigiteenused)
andmed=andmedSisse()
andmedPikk=andmedPikaks(andmed)
